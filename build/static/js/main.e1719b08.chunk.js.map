{"version":3,"sources":["images/loadingSpinner.svg","components/Home/LoadingSpinner/LoadingSpinner.js","components/PrivateRoute/PrivateRoute.js","App.js","components/Login/firebaseConfig.js","components/Login/LoginManager.js","index.js"],"names":["LoadingSpinner","className","Image","src","spinner","PrivateRoute","children","rest","isSignedIn","useContext","UserContext","loggedInUser","render","location","to","pathname","state","from","Home","lazy","Dashboard","Login","createContext","App","useState","getDecodedUser","setLoggedInUser","selectedService","setSelectedService","adminLoading","setAdminLoading","isAdmin","setIsAdmin","useEffect","axios","get","email","then","res","data","catch","error","toast","message","Provider","value","fallback","exact","path","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeLoginFramework","firebase","apps","length","initializeApp","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","handleResponse","createUserWithEmailAndPassword","name","password","updateUserName","currentUser","updateProfile","displayName","signInWithEmailAndPassword","user","photoURL","photo","setJWTToken","getIdToken","idToken","localStorage","setItem","token","getItem","jwt_decode","picture","handleSignOut","signOut","removeItem","userName","userPhoto","console","log","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1719b08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loadingSpinner.8997e53c.svg\";","import React from 'react';\nimport { Image } from 'react-bootstrap';\nimport spinner from '../../../images/loadingSpinner.svg';\n\nconst LoadingSpinner = () => {\n    return (\n        <section className=\"vh-100 vw-100 d-flex justify-content-center align-items-center\">\n            <Image src={spinner} />\n        </section>\n    );\n};\n\nexport default LoadingSpinner;","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n    const { loggedInUser: { isSignedIn } } = useContext(UserContext);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isSignedIn ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;","import axios from \"axios\";\nimport { createContext, lazy, Suspense, useEffect, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport LoadingSpinner from \"./components/Home/LoadingSpinner/LoadingSpinner\";\nimport { getDecodedUser } from \"./components/Login/LoginManager\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Dashboard = lazy(() => import(\"./pages/Dashboard\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(getDecodedUser());\n  const [selectedService, setSelectedService] = useState([]);\n  const [adminLoading, setAdminLoading] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://peaceful-lake-83415.herokuapp.com/isAdmin?email=${loggedInUser?.email}`\n      )\n      .then((res) => {\n        setIsAdmin(res.data);\n        setAdminLoading(false);\n      })\n      .catch((error) => toast.error(error.message));\n  }, [loggedInUser?.email]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        loggedInUser,\n        setLoggedInUser,\n        isAdmin,\n        selectedService,\n        setSelectedService,\n      }}\n    >\n      <Router>\n        <Toaster />\n        <Suspense fallback={<LoadingSpinner />}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <PrivateRoute path=\"/dashboard/:panel\">\n              <Dashboard adminLoading={adminLoading} />\n            </PrivateRoute>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const firebaseConfig = {\n  apiKey: \"AIzaSyBWy4IhuYbHCy8eVf4D8DQGszlYUbu7yHo\",\n  authDomain: \"sam-motors.firebaseapp.com\",\n  projectId: \"sam-motors\",\n  storageBucket: \"sam-motors.appspot.com\",\n  messagingSenderId: \"123136569344\",\n  appId: \"1:123136569344:web:cb2fde0ac259b78082a8e5\",\n};\n\nexport default firebaseConfig;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport jwt_decode from \"jwt-decode\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nexport const initializeLoginFramework = () => {\n    !firebase.apps.length && firebase.initializeApp(firebaseConfig);\n}\n\nexport const handleGoogleSignIn = () => {\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    return firebase\n        .auth()\n        .signInWithPopup(googleProvider)\n        .then(res => handleResponse(res))\n}\n\nexport const createUserWithEmailAndPassword = (name, email, password) => {\n    return firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(res => {\n            updateUserName(name);\n            return handleResponse(res);\n        })\n}\n\nconst updateUserName = name => {\n    const user = firebase.auth().currentUser;\n    user.updateProfile({\n        displayName: name\n    })\n}\n\nexport const signInWithEmailAndPassword = (email, password) => {\n    return firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(res => handleResponse(res))\n}\n\nconst handleResponse = (res) => {\n    const { displayName, photoURL, email } = res.user;\n    const signedInUser = {\n        isSignedIn: true,\n        name: displayName,\n        email: email,\n        photo: photoURL || \"https://i.ibb.co/5GzXkwq/user.png\"\n    }\n    return signedInUser;\n}\n\nexport const setJWTToken = () => {\n    return firebase\n        .auth().currentUser\n        .getIdToken(true)\n        .then(idToken => {\n            localStorage.setItem('token', idToken)\n        })\n}\n\nexport const getDecodedUser = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n        return {};\n    }\n    const { name, picture, email } = jwt_decode(token);\n    const decodedUser = {\n        isSignedIn: true,\n        name: name,\n        email: email,\n        photo: picture || \"https://i.ibb.co/5GzXkwq/user.png\"\n    }\n    return decodedUser;\n}\n\nexport const handleSignOut = () => {\n    return firebase\n        .auth()\n        .signOut()\n        .then(() => {\n            localStorage.removeItem('token');\n            const signedOutUser = {\n                isSignedIn: false,\n                userName: '',\n                email: '',\n                userPhoto: ''\n            }\n            return signedOutUser;\n        })\n        .catch(error => console.log(error.message))\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}